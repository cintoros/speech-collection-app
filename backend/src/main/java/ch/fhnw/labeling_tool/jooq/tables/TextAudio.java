/*
 * This file is generated by jOOQ.
 */
package ch.fhnw.labeling_tool.jooq.tables;


import ch.fhnw.labeling_tool.jooq.Indexes;
import ch.fhnw.labeling_tool.jooq.Keys;
import ch.fhnw.labeling_tool.jooq.LabelingTool;
import ch.fhnw.labeling_tool.jooq.tables.records.TextAudioRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TextAudio extends TableImpl<TextAudioRecord> {

    private static final long serialVersionUID = -339186872;

    public static final TextAudio TEXT_AUDIO = new TextAudio();

    @Override
    public Class<TextAudioRecord> getRecordType() {
        return TextAudioRecord.class;
    }

    public final TableField<TextAudioRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    public final TableField<TextAudioRecord, Double> AUDIO_START = createField("audio_start", org.jooq.impl.SQLDataType.FLOAT.nullable(false), this, "");

    public final TableField<TextAudioRecord, Double> AUDIO_END = createField("audio_end", org.jooq.impl.SQLDataType.FLOAT.nullable(false), this, "");

    public final TableField<TextAudioRecord, String> TEXT = createField("text", org.jooq.impl.SQLDataType.CLOB.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.CLOB)), this, "");

    public final TableField<TextAudioRecord, Integer> FILEID = createField("fileId", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    public final TableField<TextAudioRecord, String> SPEAKER = createField("speaker", org.jooq.impl.SQLDataType.VARCHAR(45).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)), this, "");

    public final TableField<TextAudioRecord, Integer> LABELED = createField("labeled", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.INTEGER)), this, "");

    public final TableField<TextAudioRecord, Long> CORRECT = createField("correct", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    public final TableField<TextAudioRecord, Long> WRONG = createField("wrong", org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    public TextAudio() {
        this(DSL.name("text_audio"), null);
    }

    public TextAudio(String alias) {
        this(DSL.name(alias), TEXT_AUDIO);
    }

    public TextAudio(Name alias) {
        this(alias, TEXT_AUDIO);
    }

    private TextAudio(Name alias, Table<TextAudioRecord> aliased) {
        this(alias, aliased, null);
    }

    private TextAudio(Name alias, Table<TextAudioRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> TextAudio(Table<O> child, ForeignKey<O, TextAudioRecord> key) {
        super(child, key, TEXT_AUDIO);
    }

    @Override
    public Schema getSchema() {
        return LabelingTool.LABELING_TOOL;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.TEXT_AUDIO_PRIMARY);
    }

    @Override
    public Identity<TextAudioRecord, Long> getIdentity() {
        return Keys.IDENTITY_TEXT_AUDIO;
    }

    @Override
    public UniqueKey<TextAudioRecord> getPrimaryKey() {
        return Keys.KEY_TEXT_AUDIO_PRIMARY;
    }

    @Override
    public List<UniqueKey<TextAudioRecord>> getKeys() {
        return Arrays.<UniqueKey<TextAudioRecord>>asList(Keys.KEY_TEXT_AUDIO_PRIMARY);
    }

    @Override
    public TextAudio as(String alias) {
        return new TextAudio(DSL.name(alias), this);
    }

    @Override
    public TextAudio as(Name alias) {
        return new TextAudio(alias, this);
    }

    @Override
    public TextAudio rename(String name) {
        return new TextAudio(DSL.name(name), null);
    }

    @Override
    public TextAudio rename(Name name) {
        return new TextAudio(name, null);
    }
}
