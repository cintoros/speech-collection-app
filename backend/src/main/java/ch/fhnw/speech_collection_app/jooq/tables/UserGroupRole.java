/*
 * This file is generated by jOOQ.
 */
package ch.fhnw.speech_collection_app.jooq.tables;


import ch.fhnw.speech_collection_app.jooq.Indexes;
import ch.fhnw.speech_collection_app.jooq.Keys;
import ch.fhnw.speech_collection_app.jooq.SpeechCollectionApp;
import ch.fhnw.speech_collection_app.jooq.enums.UserGroupRoleRole;
import ch.fhnw.speech_collection_app.jooq.tables.records.UserGroupRoleRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserGroupRole extends TableImpl<UserGroupRoleRecord> {

    private static final long serialVersionUID = -1058611051;

    public static final UserGroupRole USER_GROUP_ROLE = new UserGroupRole();

    @Override
    public Class<UserGroupRoleRecord> getRecordType() {
        return UserGroupRoleRecord.class;
    }

    public final TableField<UserGroupRoleRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    public final TableField<UserGroupRoleRecord, UserGroupRoleRole> ROLE = createField(DSL.name("role"), org.jooq.impl.SQLDataType.VARCHAR(11).defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.VARCHAR)).asEnumDataType(ch.fhnw.speech_collection_app.jooq.enums.UserGroupRoleRole.class), this, "");

    public final TableField<UserGroupRoleRecord, Long> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    public final TableField<UserGroupRoleRecord, Long> USER_GROUP_ID = createField(DSL.name("user_group_id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    public UserGroupRole() {
        this(DSL.name("user_group_role"), null);
    }

    public UserGroupRole(String alias) {
        this(DSL.name(alias), USER_GROUP_ROLE);
    }

    public UserGroupRole(Name alias) {
        this(alias, USER_GROUP_ROLE);
    }

    private UserGroupRole(Name alias, Table<UserGroupRoleRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserGroupRole(Name alias, Table<UserGroupRoleRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UserGroupRole(Table<O> child, ForeignKey<O, UserGroupRoleRecord> key) {
        super(child, key, USER_GROUP_ROLE);
    }

    @Override
    public Schema getSchema() {
        return SpeechCollectionApp.SPEECH_COLLECTION_APP;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_GROUP_ROLE_PRIMARY, Indexes.USER_GROUP_ROLE_USER_GROUP_ID, Indexes.USER_GROUP_ROLE_USER_ID);
    }

    @Override
    public Identity<UserGroupRoleRecord, Long> getIdentity() {
        return Keys.IDENTITY_USER_GROUP_ROLE;
    }

    @Override
    public UniqueKey<UserGroupRoleRecord> getPrimaryKey() {
        return Keys.KEY_USER_GROUP_ROLE_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserGroupRoleRecord>> getKeys() {
        return Arrays.<UniqueKey<UserGroupRoleRecord>>asList(Keys.KEY_USER_GROUP_ROLE_PRIMARY);
    }

    @Override
    public List<ForeignKey<UserGroupRoleRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserGroupRoleRecord, ?>>asList(Keys.USER_GROUP_ROLE_IBFK_2, Keys.USER_GROUP_ROLE_IBFK_1);
    }

    public User user() {
        return new User(this, Keys.USER_GROUP_ROLE_IBFK_2);
    }

    public UserGroup userGroup() {
        return new UserGroup(this, Keys.USER_GROUP_ROLE_IBFK_1);
    }

    @Override
    public UserGroupRole as(String alias) {
        return new UserGroupRole(DSL.name(alias), this);
    }

    @Override
    public UserGroupRole as(Name alias) {
        return new UserGroupRole(alias, this);
    }

    @Override
    public UserGroupRole rename(String name) {
        return new UserGroupRole(DSL.name(name), null);
    }

    @Override
    public UserGroupRole rename(Name name) {
        return new UserGroupRole(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, UserGroupRoleRole, Long, Long> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
