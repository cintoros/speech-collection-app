/*
 * This file is generated by jOOQ.
 */
package ch.fhnw.speech_collection_app.jooq.tables.records;


import ch.fhnw.speech_collection_app.jooq.tables.DataElement;

import java.sql.Timestamp;

import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DataElementRecord extends UpdatableRecordImpl<DataElementRecord> implements Record8<Long, Long, Long, Long, Timestamp, Boolean, Boolean, Long> {

    private static final long serialVersionUID = 78742825;

    public void setId(Long value) {
        set(0, value);
    }

    public Long getId() {
        return (Long) get(0);
    }

    public void setSourceId(Long value) {
        set(1, value);
    }

    public Long getSourceId() {
        return (Long) get(1);
    }

    public void setUserId(Long value) {
        set(2, value);
    }

    public Long getUserId() {
        return (Long) get(2);
    }

    public void setUserGroupId(Long value) {
        set(3, value);
    }

    @NotNull
    public Long getUserGroupId() {
        return (Long) get(3);
    }

    public void setCreatedTime(Timestamp value) {
        set(4, value);
    }

    public Timestamp getCreatedTime() {
        return (Timestamp) get(4);
    }

    public void setFinished(Boolean value) {
        set(5, value);
    }

    public Boolean getFinished() {
        return (Boolean) get(5);
    }

    public void setIsPrivate(Boolean value) {
        set(6, value);
    }

    public Boolean getIsPrivate() {
        return (Boolean) get(6);
    }

    public void setSkipped(Long value) {
        set(7, value);
    }

    public Long getSkipped() {
        return (Long) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, Long, Long, Long, Timestamp, Boolean, Boolean, Long> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, Long, Long, Long, Timestamp, Boolean, Boolean, Long> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return DataElement.DATA_ELEMENT.ID;
    }

    @Override
    public Field<Long> field2() {
        return DataElement.DATA_ELEMENT.SOURCE_ID;
    }

    @Override
    public Field<Long> field3() {
        return DataElement.DATA_ELEMENT.USER_ID;
    }

    @Override
    public Field<Long> field4() {
        return DataElement.DATA_ELEMENT.USER_GROUP_ID;
    }

    @Override
    public Field<Timestamp> field5() {
        return DataElement.DATA_ELEMENT.CREATED_TIME;
    }

    @Override
    public Field<Boolean> field6() {
        return DataElement.DATA_ELEMENT.FINISHED;
    }

    @Override
    public Field<Boolean> field7() {
        return DataElement.DATA_ELEMENT.IS_PRIVATE;
    }

    @Override
    public Field<Long> field8() {
        return DataElement.DATA_ELEMENT.SKIPPED;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getSourceId();
    }

    @Override
    public Long component3() {
        return getUserId();
    }

    @Override
    public Long component4() {
        return getUserGroupId();
    }

    @Override
    public Timestamp component5() {
        return getCreatedTime();
    }

    @Override
    public Boolean component6() {
        return getFinished();
    }

    @Override
    public Boolean component7() {
        return getIsPrivate();
    }

    @Override
    public Long component8() {
        return getSkipped();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getSourceId();
    }

    @Override
    public Long value3() {
        return getUserId();
    }

    @Override
    public Long value4() {
        return getUserGroupId();
    }

    @Override
    public Timestamp value5() {
        return getCreatedTime();
    }

    @Override
    public Boolean value6() {
        return getFinished();
    }

    @Override
    public Boolean value7() {
        return getIsPrivate();
    }

    @Override
    public Long value8() {
        return getSkipped();
    }

    @Override
    public DataElementRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public DataElementRecord value2(Long value) {
        setSourceId(value);
        return this;
    }

    @Override
    public DataElementRecord value3(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public DataElementRecord value4(Long value) {
        setUserGroupId(value);
        return this;
    }

    @Override
    public DataElementRecord value5(Timestamp value) {
        setCreatedTime(value);
        return this;
    }

    @Override
    public DataElementRecord value6(Boolean value) {
        setFinished(value);
        return this;
    }

    @Override
    public DataElementRecord value7(Boolean value) {
        setIsPrivate(value);
        return this;
    }

    @Override
    public DataElementRecord value8(Long value) {
        setSkipped(value);
        return this;
    }

    @Override
    public DataElementRecord values(Long value1, Long value2, Long value3, Long value4, Timestamp value5, Boolean value6, Boolean value7, Long value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public DataElementRecord() {
        super(DataElement.DATA_ELEMENT);
    }

    public DataElementRecord(Long id, Long sourceId, Long userId, Long userGroupId, Timestamp createdTime, Boolean finished, Boolean isPrivate, Long skipped) {
        super(DataElement.DATA_ELEMENT);

        set(0, id);
        set(1, sourceId);
        set(2, userId);
        set(3, userGroupId);
        set(4, createdTime);
        set(5, finished);
        set(6, isPrivate);
        set(7, skipped);
    }
}
