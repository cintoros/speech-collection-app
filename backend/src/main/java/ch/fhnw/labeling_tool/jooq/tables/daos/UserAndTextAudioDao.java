/*
 * This file is generated by jOOQ.
 */
package ch.fhnw.labeling_tool.jooq.tables.daos;


import ch.fhnw.labeling_tool.jooq.tables.UserAndTextAudio;
import ch.fhnw.labeling_tool.jooq.tables.records.UserAndTextAudioRecord;

import java.sql.Timestamp;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class UserAndTextAudioDao extends DAOImpl<UserAndTextAudioRecord, ch.fhnw.labeling_tool.jooq.tables.pojos.UserAndTextAudio, Long> {

    public UserAndTextAudioDao() {
        super(UserAndTextAudio.USER_AND_TEXT_AUDIO, ch.fhnw.labeling_tool.jooq.tables.pojos.UserAndTextAudio.class);
    }

    @Autowired
    public UserAndTextAudioDao(Configuration configuration) {
        super(UserAndTextAudio.USER_AND_TEXT_AUDIO, ch.fhnw.labeling_tool.jooq.tables.pojos.UserAndTextAudio.class, configuration);
    }

    @Override
    protected Long getId(ch.fhnw.labeling_tool.jooq.tables.pojos.UserAndTextAudio object) {
        return object.getId();
    }

    public List<ch.fhnw.labeling_tool.jooq.tables.pojos.UserAndTextAudio> fetchById(Long... values) {
        return fetch(UserAndTextAudio.USER_AND_TEXT_AUDIO.ID, values);
    }

    public ch.fhnw.labeling_tool.jooq.tables.pojos.UserAndTextAudio fetchOneById(Long value) {
        return fetchOne(UserAndTextAudio.USER_AND_TEXT_AUDIO.ID, value);
    }

    public List<ch.fhnw.labeling_tool.jooq.tables.pojos.UserAndTextAudio> fetchByUserId(Long... values) {
        return fetch(UserAndTextAudio.USER_AND_TEXT_AUDIO.USER_ID, values);
    }

    public List<ch.fhnw.labeling_tool.jooq.tables.pojos.UserAndTextAudio> fetchByTextAudioId(Integer... values) {
        return fetch(UserAndTextAudio.USER_AND_TEXT_AUDIO.TEXT_AUDIO_ID, values);
    }

    public List<ch.fhnw.labeling_tool.jooq.tables.pojos.UserAndTextAudio> fetchByTime(Timestamp... values) {
        return fetch(UserAndTextAudio.USER_AND_TEXT_AUDIO.TIME, values);
    }
}
