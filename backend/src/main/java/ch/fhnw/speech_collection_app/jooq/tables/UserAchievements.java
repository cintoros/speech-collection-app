/*
 * This file is generated by jOOQ.
 */
package ch.fhnw.speech_collection_app.jooq.tables;


import ch.fhnw.speech_collection_app.jooq.Indexes;
import ch.fhnw.speech_collection_app.jooq.Keys;
import ch.fhnw.speech_collection_app.jooq.SpeechCollectionApp;
import ch.fhnw.speech_collection_app.jooq.tables.records.UserAchievementsRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAchievements extends TableImpl<UserAchievementsRecord> {

    private static final long serialVersionUID = -906878661;

    public static final UserAchievements USER_ACHIEVEMENTS = new UserAchievements();

    @Override
    public Class<UserAchievementsRecord> getRecordType() {
        return UserAchievementsRecord.class;
    }

    public final TableField<UserAchievementsRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).identity(true), this, "");

    public final TableField<UserAchievementsRecord, Long> USER_ID = createField(DSL.name("user_id"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    public final TableField<UserAchievementsRecord, Long> ACHIEVEMENTS_ID = createField(DSL.name("achievements_id"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    public final TableField<UserAchievementsRecord, Long> POINTS = createField(DSL.name("points"), org.jooq.impl.SQLDataType.BIGINT.defaultValue(org.jooq.impl.DSL.inline("NULL", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    public final TableField<UserAchievementsRecord, Boolean> IS_NEW = createField(DSL.name("is_new"), org.jooq.impl.SQLDataType.BOOLEAN.defaultValue(org.jooq.impl.DSL.inline("1", org.jooq.impl.SQLDataType.BOOLEAN)), this, "");

    public UserAchievements() {
        this(DSL.name("user_achievements"), null);
    }

    public UserAchievements(String alias) {
        this(DSL.name(alias), USER_ACHIEVEMENTS);
    }

    public UserAchievements(Name alias) {
        this(alias, USER_ACHIEVEMENTS);
    }

    private UserAchievements(Name alias, Table<UserAchievementsRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserAchievements(Name alias, Table<UserAchievementsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> UserAchievements(Table<O> child, ForeignKey<O, UserAchievementsRecord> key) {
        super(child, key, USER_ACHIEVEMENTS);
    }

    @Override
    public Schema getSchema() {
        return SpeechCollectionApp.SPEECH_COLLECTION_APP;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_ACHIEVEMENTS_ACHIEVEMENTS_ID, Indexes.USER_ACHIEVEMENTS_USER_ID);
    }

    @Override
    public Identity<UserAchievementsRecord, Long> getIdentity() {
        return Keys.IDENTITY_USER_ACHIEVEMENTS;
    }

    @Override
    public UniqueKey<UserAchievementsRecord> getPrimaryKey() {
        return Keys.KEY_USER_ACHIEVEMENTS_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserAchievementsRecord>> getKeys() {
        return Arrays.<UniqueKey<UserAchievementsRecord>>asList(Keys.KEY_USER_ACHIEVEMENTS_PRIMARY);
    }

    @Override
    public List<ForeignKey<UserAchievementsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserAchievementsRecord, ?>>asList(Keys.USER_ACHIEVEMENTS_IBFK_1, Keys.USER_ACHIEVEMENTS_IBFK_2);
    }

    public User user() {
        return new User(this, Keys.USER_ACHIEVEMENTS_IBFK_1);
    }

    public Achievements achievements() {
        return new Achievements(this, Keys.USER_ACHIEVEMENTS_IBFK_2);
    }

    @Override
    public UserAchievements as(String alias) {
        return new UserAchievements(DSL.name(alias), this);
    }

    @Override
    public UserAchievements as(Name alias) {
        return new UserAchievements(alias, this);
    }

    @Override
    public UserAchievements rename(String name) {
        return new UserAchievements(DSL.name(name), null);
    }

    @Override
    public UserAchievements rename(Name name) {
        return new UserAchievements(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Long, Long, Boolean> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
