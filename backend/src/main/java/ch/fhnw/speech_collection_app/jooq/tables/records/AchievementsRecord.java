/*
 * This file is generated by jOOQ.
 */
package ch.fhnw.speech_collection_app.jooq.tables.records;


import ch.fhnw.speech_collection_app.jooq.enums.AchievementsDependsOn;
import ch.fhnw.speech_collection_app.jooq.tables.Achievements;

import java.sql.Timestamp;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record12;
import org.jooq.Row12;
import org.jooq.impl.UpdatableRecordImpl;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AchievementsRecord extends UpdatableRecordImpl<AchievementsRecord> implements Record12<Long, Long, String, String, String, Timestamp, Timestamp, Long, Long, Long, Long, AchievementsDependsOn> {

    private static final long serialVersionUID = 181062440;

    public void setId(Long value) {
        set(0, value);
    }

    public Long getId() {
        return (Long) get(0);
    }

    public void setDomainId(Long value) {
        set(1, value);
    }

    public Long getDomainId() {
        return (Long) get(1);
    }

    public void setName(String value) {
        set(2, value);
    }

    @Size(max = 65535)
    public String getName() {
        return (String) get(2);
    }

    public void setBatchName(String value) {
        set(3, value);
    }

    @Size(max = 65535)
    public String getBatchName() {
        return (String) get(3);
    }

    public void setDescription(String value) {
        set(4, value);
    }

    @Size(max = 65535)
    public String getDescription() {
        return (String) get(4);
    }

    public void setStartTime(Timestamp value) {
        set(5, value);
    }

    public Timestamp getStartTime() {
        return (Timestamp) get(5);
    }

    public void setEndTime(Timestamp value) {
        set(6, value);
    }

    public Timestamp getEndTime() {
        return (Timestamp) get(6);
    }

    public void setPointsLvl1(Long value) {
        set(7, value);
    }

    public Long getPointsLvl1() {
        return (Long) get(7);
    }

    public void setPointsLvl2(Long value) {
        set(8, value);
    }

    public Long getPointsLvl2() {
        return (Long) get(8);
    }

    public void setPointsLvl3(Long value) {
        set(9, value);
    }

    public Long getPointsLvl3() {
        return (Long) get(9);
    }

    public void setPointsLvl4(Long value) {
        set(10, value);
    }

    public Long getPointsLvl4() {
        return (Long) get(10);
    }

    public void setDependsOn(AchievementsDependsOn value) {
        set(11, value);
    }

    @NotNull
    public AchievementsDependsOn getDependsOn() {
        return (AchievementsDependsOn) get(11);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record12 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row12<Long, Long, String, String, String, Timestamp, Timestamp, Long, Long, Long, Long, AchievementsDependsOn> fieldsRow() {
        return (Row12) super.fieldsRow();
    }

    @Override
    public Row12<Long, Long, String, String, String, Timestamp, Timestamp, Long, Long, Long, Long, AchievementsDependsOn> valuesRow() {
        return (Row12) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Achievements.ACHIEVEMENTS.ID;
    }

    @Override
    public Field<Long> field2() {
        return Achievements.ACHIEVEMENTS.DOMAIN_ID;
    }

    @Override
    public Field<String> field3() {
        return Achievements.ACHIEVEMENTS.NAME;
    }

    @Override
    public Field<String> field4() {
        return Achievements.ACHIEVEMENTS.BATCH_NAME;
    }

    @Override
    public Field<String> field5() {
        return Achievements.ACHIEVEMENTS.DESCRIPTION;
    }

    @Override
    public Field<Timestamp> field6() {
        return Achievements.ACHIEVEMENTS.START_TIME;
    }

    @Override
    public Field<Timestamp> field7() {
        return Achievements.ACHIEVEMENTS.END_TIME;
    }

    @Override
    public Field<Long> field8() {
        return Achievements.ACHIEVEMENTS.POINTS_LVL1;
    }

    @Override
    public Field<Long> field9() {
        return Achievements.ACHIEVEMENTS.POINTS_LVL2;
    }

    @Override
    public Field<Long> field10() {
        return Achievements.ACHIEVEMENTS.POINTS_LVL3;
    }

    @Override
    public Field<Long> field11() {
        return Achievements.ACHIEVEMENTS.POINTS_LVL4;
    }

    @Override
    public Field<AchievementsDependsOn> field12() {
        return Achievements.ACHIEVEMENTS.DEPENDS_ON;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getDomainId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getBatchName();
    }

    @Override
    public String component5() {
        return getDescription();
    }

    @Override
    public Timestamp component6() {
        return getStartTime();
    }

    @Override
    public Timestamp component7() {
        return getEndTime();
    }

    @Override
    public Long component8() {
        return getPointsLvl1();
    }

    @Override
    public Long component9() {
        return getPointsLvl2();
    }

    @Override
    public Long component10() {
        return getPointsLvl3();
    }

    @Override
    public Long component11() {
        return getPointsLvl4();
    }

    @Override
    public AchievementsDependsOn component12() {
        return getDependsOn();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getDomainId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getBatchName();
    }

    @Override
    public String value5() {
        return getDescription();
    }

    @Override
    public Timestamp value6() {
        return getStartTime();
    }

    @Override
    public Timestamp value7() {
        return getEndTime();
    }

    @Override
    public Long value8() {
        return getPointsLvl1();
    }

    @Override
    public Long value9() {
        return getPointsLvl2();
    }

    @Override
    public Long value10() {
        return getPointsLvl3();
    }

    @Override
    public Long value11() {
        return getPointsLvl4();
    }

    @Override
    public AchievementsDependsOn value12() {
        return getDependsOn();
    }

    @Override
    public AchievementsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public AchievementsRecord value2(Long value) {
        setDomainId(value);
        return this;
    }

    @Override
    public AchievementsRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public AchievementsRecord value4(String value) {
        setBatchName(value);
        return this;
    }

    @Override
    public AchievementsRecord value5(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public AchievementsRecord value6(Timestamp value) {
        setStartTime(value);
        return this;
    }

    @Override
    public AchievementsRecord value7(Timestamp value) {
        setEndTime(value);
        return this;
    }

    @Override
    public AchievementsRecord value8(Long value) {
        setPointsLvl1(value);
        return this;
    }

    @Override
    public AchievementsRecord value9(Long value) {
        setPointsLvl2(value);
        return this;
    }

    @Override
    public AchievementsRecord value10(Long value) {
        setPointsLvl3(value);
        return this;
    }

    @Override
    public AchievementsRecord value11(Long value) {
        setPointsLvl4(value);
        return this;
    }

    @Override
    public AchievementsRecord value12(AchievementsDependsOn value) {
        setDependsOn(value);
        return this;
    }

    @Override
    public AchievementsRecord values(Long value1, Long value2, String value3, String value4, String value5, Timestamp value6, Timestamp value7, Long value8, Long value9, Long value10, Long value11, AchievementsDependsOn value12) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public AchievementsRecord() {
        super(Achievements.ACHIEVEMENTS);
    }

    public AchievementsRecord(Long id, Long domainId, String name, String batchName, String description, Timestamp startTime, Timestamp endTime, Long pointsLvl1, Long pointsLvl2, Long pointsLvl3, Long pointsLvl4, AchievementsDependsOn dependsOn) {
        super(Achievements.ACHIEVEMENTS);

        set(0, id);
        set(1, domainId);
        set(2, name);
        set(3, batchName);
        set(4, description);
        set(5, startTime);
        set(6, endTime);
        set(7, pointsLvl1);
        set(8, pointsLvl2);
        set(9, pointsLvl3);
        set(10, pointsLvl4);
        set(11, dependsOn);
    }
}
