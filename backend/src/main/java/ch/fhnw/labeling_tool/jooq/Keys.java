/*
 * This file is generated by jOOQ.
 */
package ch.fhnw.labeling_tool.jooq;


import ch.fhnw.labeling_tool.jooq.tables.CheckedRecording;
import ch.fhnw.labeling_tool.jooq.tables.CheckedTextAudio;
import ch.fhnw.labeling_tool.jooq.tables.Dialect;
import ch.fhnw.labeling_tool.jooq.tables.Domain;
import ch.fhnw.labeling_tool.jooq.tables.Excerpt;
import ch.fhnw.labeling_tool.jooq.tables.FlywaySchemaHistory;
import ch.fhnw.labeling_tool.jooq.tables.Language;
import ch.fhnw.labeling_tool.jooq.tables.OriginalText;
import ch.fhnw.labeling_tool.jooq.tables.Recording;
import ch.fhnw.labeling_tool.jooq.tables.Source;
import ch.fhnw.labeling_tool.jooq.tables.Speaker;
import ch.fhnw.labeling_tool.jooq.tables.TextAudio;
import ch.fhnw.labeling_tool.jooq.tables.User;
import ch.fhnw.labeling_tool.jooq.tables.UserGroup;
import ch.fhnw.labeling_tool.jooq.tables.UserGroupRole;
import ch.fhnw.labeling_tool.jooq.tables.records.CheckedRecordingRecord;
import ch.fhnw.labeling_tool.jooq.tables.records.CheckedTextAudioRecord;
import ch.fhnw.labeling_tool.jooq.tables.records.DialectRecord;
import ch.fhnw.labeling_tool.jooq.tables.records.DomainRecord;
import ch.fhnw.labeling_tool.jooq.tables.records.ExcerptRecord;
import ch.fhnw.labeling_tool.jooq.tables.records.FlywaySchemaHistoryRecord;
import ch.fhnw.labeling_tool.jooq.tables.records.LanguageRecord;
import ch.fhnw.labeling_tool.jooq.tables.records.OriginalTextRecord;
import ch.fhnw.labeling_tool.jooq.tables.records.RecordingRecord;
import ch.fhnw.labeling_tool.jooq.tables.records.SourceRecord;
import ch.fhnw.labeling_tool.jooq.tables.records.SpeakerRecord;
import ch.fhnw.labeling_tool.jooq.tables.records.TextAudioRecord;
import ch.fhnw.labeling_tool.jooq.tables.records.UserGroupRecord;
import ch.fhnw.labeling_tool.jooq.tables.records.UserGroupRoleRecord;
import ch.fhnw.labeling_tool.jooq.tables.records.UserRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<CheckedRecordingRecord, Long> IDENTITY_CHECKED_RECORDING = Identities0.IDENTITY_CHECKED_RECORDING;
    public static final Identity<CheckedTextAudioRecord, Long> IDENTITY_CHECKED_TEXT_AUDIO = Identities0.IDENTITY_CHECKED_TEXT_AUDIO;
    public static final Identity<DialectRecord, Long> IDENTITY_DIALECT = Identities0.IDENTITY_DIALECT;
    public static final Identity<DomainRecord, Long> IDENTITY_DOMAIN = Identities0.IDENTITY_DOMAIN;
    public static final Identity<ExcerptRecord, Long> IDENTITY_EXCERPT = Identities0.IDENTITY_EXCERPT;
    public static final Identity<LanguageRecord, Long> IDENTITY_LANGUAGE = Identities0.IDENTITY_LANGUAGE;
    public static final Identity<OriginalTextRecord, Long> IDENTITY_ORIGINAL_TEXT = Identities0.IDENTITY_ORIGINAL_TEXT;
    public static final Identity<RecordingRecord, Long> IDENTITY_RECORDING = Identities0.IDENTITY_RECORDING;
    public static final Identity<SourceRecord, Long> IDENTITY_SOURCE = Identities0.IDENTITY_SOURCE;
    public static final Identity<SpeakerRecord, Long> IDENTITY_SPEAKER = Identities0.IDENTITY_SPEAKER;
    public static final Identity<TextAudioRecord, Long> IDENTITY_TEXT_AUDIO = Identities0.IDENTITY_TEXT_AUDIO;
    public static final Identity<UserRecord, Long> IDENTITY_USER = Identities0.IDENTITY_USER;
    public static final Identity<UserGroupRecord, Long> IDENTITY_USER_GROUP = Identities0.IDENTITY_USER_GROUP;
    public static final Identity<UserGroupRoleRecord, Long> IDENTITY_USER_GROUP_ROLE = Identities0.IDENTITY_USER_GROUP_ROLE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<CheckedRecordingRecord> KEY_CHECKED_RECORDING_PRIMARY = UniqueKeys0.KEY_CHECKED_RECORDING_PRIMARY;
    public static final UniqueKey<CheckedTextAudioRecord> KEY_CHECKED_TEXT_AUDIO_PRIMARY = UniqueKeys0.KEY_CHECKED_TEXT_AUDIO_PRIMARY;
    public static final UniqueKey<DialectRecord> KEY_DIALECT_PRIMARY = UniqueKeys0.KEY_DIALECT_PRIMARY;
    public static final UniqueKey<DomainRecord> KEY_DOMAIN_PRIMARY = UniqueKeys0.KEY_DOMAIN_PRIMARY;
    public static final UniqueKey<ExcerptRecord> KEY_EXCERPT_PRIMARY = UniqueKeys0.KEY_EXCERPT_PRIMARY;
    public static final UniqueKey<FlywaySchemaHistoryRecord> KEY_FLYWAY_SCHEMA_HISTORY_PRIMARY = UniqueKeys0.KEY_FLYWAY_SCHEMA_HISTORY_PRIMARY;
    public static final UniqueKey<LanguageRecord> KEY_LANGUAGE_PRIMARY = UniqueKeys0.KEY_LANGUAGE_PRIMARY;
    public static final UniqueKey<OriginalTextRecord> KEY_ORIGINAL_TEXT_PRIMARY = UniqueKeys0.KEY_ORIGINAL_TEXT_PRIMARY;
    public static final UniqueKey<RecordingRecord> KEY_RECORDING_PRIMARY = UniqueKeys0.KEY_RECORDING_PRIMARY;
    public static final UniqueKey<SourceRecord> KEY_SOURCE_PRIMARY = UniqueKeys0.KEY_SOURCE_PRIMARY;
    public static final UniqueKey<SpeakerRecord> KEY_SPEAKER_PRIMARY = UniqueKeys0.KEY_SPEAKER_PRIMARY;
    public static final UniqueKey<TextAudioRecord> KEY_TEXT_AUDIO_PRIMARY = UniqueKeys0.KEY_TEXT_AUDIO_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = UniqueKeys0.KEY_USER_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_USER_EMAIL = UniqueKeys0.KEY_USER_EMAIL;
    public static final UniqueKey<UserRecord> KEY_USER_USERNAME = UniqueKeys0.KEY_USER_USERNAME;
    public static final UniqueKey<UserGroupRecord> KEY_USER_GROUP_PRIMARY = UniqueKeys0.KEY_USER_GROUP_PRIMARY;
    public static final UniqueKey<UserGroupRoleRecord> KEY_USER_GROUP_ROLE_PRIMARY = UniqueKeys0.KEY_USER_GROUP_ROLE_PRIMARY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<CheckedRecordingRecord, RecordingRecord> CHECKED_RECORDING_IBFK_2 = ForeignKeys0.CHECKED_RECORDING_IBFK_2;
    public static final ForeignKey<CheckedRecordingRecord, UserRecord> CHECKED_RECORDING_IBFK_1 = ForeignKeys0.CHECKED_RECORDING_IBFK_1;
    public static final ForeignKey<CheckedTextAudioRecord, TextAudioRecord> CHECKED_TEXT_AUDIO_IBFK_2 = ForeignKeys0.CHECKED_TEXT_AUDIO_IBFK_2;
    public static final ForeignKey<CheckedTextAudioRecord, UserRecord> CHECKED_TEXT_AUDIO_IBFK_1 = ForeignKeys0.CHECKED_TEXT_AUDIO_IBFK_1;
    public static final ForeignKey<DialectRecord, LanguageRecord> DIALECT_IBFK_1 = ForeignKeys0.DIALECT_IBFK_1;
    public static final ForeignKey<ExcerptRecord, OriginalTextRecord> EXCERPT_IBFK_1 = ForeignKeys0.EXCERPT_IBFK_1;
    public static final ForeignKey<OriginalTextRecord, UserGroupRecord> ORIGINAL_TEXT_IBFK_1 = ForeignKeys0.ORIGINAL_TEXT_IBFK_1;
    public static final ForeignKey<OriginalTextRecord, DomainRecord> ORIGINAL_TEXT_IBFK_2 = ForeignKeys0.ORIGINAL_TEXT_IBFK_2;
    public static final ForeignKey<OriginalTextRecord, UserRecord> ORIGINAL_TEXT_IBFK_3 = ForeignKeys0.ORIGINAL_TEXT_IBFK_3;
    public static final ForeignKey<RecordingRecord, ExcerptRecord> RECORDING_IBFK_2 = ForeignKeys0.RECORDING_IBFK_2;
    public static final ForeignKey<RecordingRecord, UserRecord> RECORDING_IBFK_1 = ForeignKeys0.RECORDING_IBFK_1;
    public static final ForeignKey<TextAudioRecord, SpeakerRecord> TEXT_AUDIO_IBFK_1 = ForeignKeys0.TEXT_AUDIO_IBFK_1;
    public static final ForeignKey<TextAudioRecord, SourceRecord> TEXT_AUDIO_IBFK_2 = ForeignKeys0.TEXT_AUDIO_IBFK_2;
    public static final ForeignKey<UserRecord, DialectRecord> USER_IBFK_1 = ForeignKeys0.USER_IBFK_1;
    public static final ForeignKey<UserGroupRoleRecord, UserRecord> USER_GROUP_ROLE_IBFK_2 = ForeignKeys0.USER_GROUP_ROLE_IBFK_2;
    public static final ForeignKey<UserGroupRoleRecord, UserGroupRecord> USER_GROUP_ROLE_IBFK_1 = ForeignKeys0.USER_GROUP_ROLE_IBFK_1;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<CheckedRecordingRecord, Long> IDENTITY_CHECKED_RECORDING = Internal.createIdentity(CheckedRecording.CHECKED_RECORDING, CheckedRecording.CHECKED_RECORDING.ID);
        public static Identity<CheckedTextAudioRecord, Long> IDENTITY_CHECKED_TEXT_AUDIO = Internal.createIdentity(CheckedTextAudio.CHECKED_TEXT_AUDIO, CheckedTextAudio.CHECKED_TEXT_AUDIO.ID);
        public static Identity<DialectRecord, Long> IDENTITY_DIALECT = Internal.createIdentity(Dialect.DIALECT, Dialect.DIALECT.ID);
        public static Identity<DomainRecord, Long> IDENTITY_DOMAIN = Internal.createIdentity(Domain.DOMAIN, Domain.DOMAIN.ID);
        public static Identity<ExcerptRecord, Long> IDENTITY_EXCERPT = Internal.createIdentity(Excerpt.EXCERPT, Excerpt.EXCERPT.ID);
        public static Identity<LanguageRecord, Long> IDENTITY_LANGUAGE = Internal.createIdentity(Language.LANGUAGE, Language.LANGUAGE.ID);
        public static Identity<OriginalTextRecord, Long> IDENTITY_ORIGINAL_TEXT = Internal.createIdentity(OriginalText.ORIGINAL_TEXT, OriginalText.ORIGINAL_TEXT.ID);
        public static Identity<RecordingRecord, Long> IDENTITY_RECORDING = Internal.createIdentity(Recording.RECORDING, Recording.RECORDING.ID);
        public static Identity<SourceRecord, Long> IDENTITY_SOURCE = Internal.createIdentity(Source.SOURCE, Source.SOURCE.ID);
        public static Identity<SpeakerRecord, Long> IDENTITY_SPEAKER = Internal.createIdentity(Speaker.SPEAKER, Speaker.SPEAKER.ID);
        public static Identity<TextAudioRecord, Long> IDENTITY_TEXT_AUDIO = Internal.createIdentity(TextAudio.TEXT_AUDIO, TextAudio.TEXT_AUDIO.ID);
        public static Identity<UserRecord, Long> IDENTITY_USER = Internal.createIdentity(User.USER, User.USER.ID);
        public static Identity<UserGroupRecord, Long> IDENTITY_USER_GROUP = Internal.createIdentity(UserGroup.USER_GROUP, UserGroup.USER_GROUP.ID);
        public static Identity<UserGroupRoleRecord, Long> IDENTITY_USER_GROUP_ROLE = Internal.createIdentity(UserGroupRole.USER_GROUP_ROLE, UserGroupRole.USER_GROUP_ROLE.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<CheckedRecordingRecord> KEY_CHECKED_RECORDING_PRIMARY = Internal.createUniqueKey(CheckedRecording.CHECKED_RECORDING, "KEY_checked_recording_PRIMARY", CheckedRecording.CHECKED_RECORDING.ID);
        public static final UniqueKey<CheckedTextAudioRecord> KEY_CHECKED_TEXT_AUDIO_PRIMARY = Internal.createUniqueKey(CheckedTextAudio.CHECKED_TEXT_AUDIO, "KEY_checked_text_audio_PRIMARY", CheckedTextAudio.CHECKED_TEXT_AUDIO.ID);
        public static final UniqueKey<DialectRecord> KEY_DIALECT_PRIMARY = Internal.createUniqueKey(Dialect.DIALECT, "KEY_dialect_PRIMARY", Dialect.DIALECT.ID);
        public static final UniqueKey<DomainRecord> KEY_DOMAIN_PRIMARY = Internal.createUniqueKey(Domain.DOMAIN, "KEY_domain_PRIMARY", Domain.DOMAIN.ID);
        public static final UniqueKey<ExcerptRecord> KEY_EXCERPT_PRIMARY = Internal.createUniqueKey(Excerpt.EXCERPT, "KEY_excerpt_PRIMARY", Excerpt.EXCERPT.ID);
        public static final UniqueKey<FlywaySchemaHistoryRecord> KEY_FLYWAY_SCHEMA_HISTORY_PRIMARY = Internal.createUniqueKey(FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY, "KEY_flyway_schema_history_PRIMARY", FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY.INSTALLED_RANK);
        public static final UniqueKey<LanguageRecord> KEY_LANGUAGE_PRIMARY = Internal.createUniqueKey(Language.LANGUAGE, "KEY_language_PRIMARY", Language.LANGUAGE.ID);
        public static final UniqueKey<OriginalTextRecord> KEY_ORIGINAL_TEXT_PRIMARY = Internal.createUniqueKey(OriginalText.ORIGINAL_TEXT, "KEY_original_text_PRIMARY", OriginalText.ORIGINAL_TEXT.ID);
        public static final UniqueKey<RecordingRecord> KEY_RECORDING_PRIMARY = Internal.createUniqueKey(Recording.RECORDING, "KEY_recording_PRIMARY", Recording.RECORDING.ID);
        public static final UniqueKey<SourceRecord> KEY_SOURCE_PRIMARY = Internal.createUniqueKey(Source.SOURCE, "KEY_source_PRIMARY", Source.SOURCE.ID);
        public static final UniqueKey<SpeakerRecord> KEY_SPEAKER_PRIMARY = Internal.createUniqueKey(Speaker.SPEAKER, "KEY_speaker_PRIMARY", Speaker.SPEAKER.ID);
        public static final UniqueKey<TextAudioRecord> KEY_TEXT_AUDIO_PRIMARY = Internal.createUniqueKey(TextAudio.TEXT_AUDIO, "KEY_text_audio_PRIMARY", TextAudio.TEXT_AUDIO.ID);
        public static final UniqueKey<UserRecord> KEY_USER_PRIMARY = Internal.createUniqueKey(User.USER, "KEY_user_PRIMARY", User.USER.ID);
        public static final UniqueKey<UserRecord> KEY_USER_EMAIL = Internal.createUniqueKey(User.USER, "KEY_user_email", User.USER.EMAIL);
        public static final UniqueKey<UserRecord> KEY_USER_USERNAME = Internal.createUniqueKey(User.USER, "KEY_user_username", User.USER.USERNAME);
        public static final UniqueKey<UserGroupRecord> KEY_USER_GROUP_PRIMARY = Internal.createUniqueKey(UserGroup.USER_GROUP, "KEY_user_group_PRIMARY", UserGroup.USER_GROUP.ID);
        public static final UniqueKey<UserGroupRoleRecord> KEY_USER_GROUP_ROLE_PRIMARY = Internal.createUniqueKey(UserGroupRole.USER_GROUP_ROLE, "KEY_user_group_role_PRIMARY", UserGroupRole.USER_GROUP_ROLE.ID);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<CheckedRecordingRecord, RecordingRecord> CHECKED_RECORDING_IBFK_2 = Internal.createForeignKey(ch.fhnw.labeling_tool.jooq.Keys.KEY_RECORDING_PRIMARY, CheckedRecording.CHECKED_RECORDING, "checked_recording_ibfk_2", CheckedRecording.CHECKED_RECORDING.RECORDING_ID);
        public static final ForeignKey<CheckedRecordingRecord, UserRecord> CHECKED_RECORDING_IBFK_1 = Internal.createForeignKey(ch.fhnw.labeling_tool.jooq.Keys.KEY_USER_PRIMARY, CheckedRecording.CHECKED_RECORDING, "checked_recording_ibfk_1", CheckedRecording.CHECKED_RECORDING.USER_ID);
        public static final ForeignKey<CheckedTextAudioRecord, TextAudioRecord> CHECKED_TEXT_AUDIO_IBFK_2 = Internal.createForeignKey(ch.fhnw.labeling_tool.jooq.Keys.KEY_TEXT_AUDIO_PRIMARY, CheckedTextAudio.CHECKED_TEXT_AUDIO, "checked_text_audio_ibfk_2", CheckedTextAudio.CHECKED_TEXT_AUDIO.TEXT_AUDIO_ID);
        public static final ForeignKey<CheckedTextAudioRecord, UserRecord> CHECKED_TEXT_AUDIO_IBFK_1 = Internal.createForeignKey(ch.fhnw.labeling_tool.jooq.Keys.KEY_USER_PRIMARY, CheckedTextAudio.CHECKED_TEXT_AUDIO, "checked_text_audio_ibfk_1", CheckedTextAudio.CHECKED_TEXT_AUDIO.USER_ID);
        public static final ForeignKey<DialectRecord, LanguageRecord> DIALECT_IBFK_1 = Internal.createForeignKey(ch.fhnw.labeling_tool.jooq.Keys.KEY_LANGUAGE_PRIMARY, Dialect.DIALECT, "dialect_ibfk_1", Dialect.DIALECT.LANGUAGE_ID);
        public static final ForeignKey<ExcerptRecord, OriginalTextRecord> EXCERPT_IBFK_1 = Internal.createForeignKey(ch.fhnw.labeling_tool.jooq.Keys.KEY_ORIGINAL_TEXT_PRIMARY, Excerpt.EXCERPT, "excerpt_ibfk_1", Excerpt.EXCERPT.ORIGINAL_TEXT_ID);
        public static final ForeignKey<OriginalTextRecord, UserGroupRecord> ORIGINAL_TEXT_IBFK_1 = Internal.createForeignKey(ch.fhnw.labeling_tool.jooq.Keys.KEY_USER_GROUP_PRIMARY, OriginalText.ORIGINAL_TEXT, "original_text_ibfk_1", OriginalText.ORIGINAL_TEXT.USER_GROUP_ID);
        public static final ForeignKey<OriginalTextRecord, DomainRecord> ORIGINAL_TEXT_IBFK_2 = Internal.createForeignKey(ch.fhnw.labeling_tool.jooq.Keys.KEY_DOMAIN_PRIMARY, OriginalText.ORIGINAL_TEXT, "original_text_ibfk_2", OriginalText.ORIGINAL_TEXT.DOMAIN_ID);
        public static final ForeignKey<OriginalTextRecord, UserRecord> ORIGINAL_TEXT_IBFK_3 = Internal.createForeignKey(ch.fhnw.labeling_tool.jooq.Keys.KEY_USER_PRIMARY, OriginalText.ORIGINAL_TEXT, "original_text_ibfk_3", OriginalText.ORIGINAL_TEXT.USER_ID);
        public static final ForeignKey<RecordingRecord, ExcerptRecord> RECORDING_IBFK_2 = Internal.createForeignKey(ch.fhnw.labeling_tool.jooq.Keys.KEY_EXCERPT_PRIMARY, Recording.RECORDING, "recording_ibfk_2", Recording.RECORDING.EXCERPT_ID);
        public static final ForeignKey<RecordingRecord, UserRecord> RECORDING_IBFK_1 = Internal.createForeignKey(ch.fhnw.labeling_tool.jooq.Keys.KEY_USER_PRIMARY, Recording.RECORDING, "recording_ibfk_1", Recording.RECORDING.USER_ID);
        public static final ForeignKey<TextAudioRecord, SpeakerRecord> TEXT_AUDIO_IBFK_1 = Internal.createForeignKey(ch.fhnw.labeling_tool.jooq.Keys.KEY_SPEAKER_PRIMARY, TextAudio.TEXT_AUDIO, "text_audio_ibfk_1", TextAudio.TEXT_AUDIO.SPEAKER_ID);
        public static final ForeignKey<TextAudioRecord, SourceRecord> TEXT_AUDIO_IBFK_2 = Internal.createForeignKey(ch.fhnw.labeling_tool.jooq.Keys.KEY_SOURCE_PRIMARY, TextAudio.TEXT_AUDIO, "text_audio_ibfk_2", TextAudio.TEXT_AUDIO.SOURCE_ID);
        public static final ForeignKey<UserRecord, DialectRecord> USER_IBFK_1 = Internal.createForeignKey(ch.fhnw.labeling_tool.jooq.Keys.KEY_DIALECT_PRIMARY, User.USER, "user_ibfk_1", User.USER.DIALECT_ID);
        public static final ForeignKey<UserGroupRoleRecord, UserRecord> USER_GROUP_ROLE_IBFK_2 = Internal.createForeignKey(ch.fhnw.labeling_tool.jooq.Keys.KEY_USER_PRIMARY, UserGroupRole.USER_GROUP_ROLE, "user_group_role_ibfk_2", UserGroupRole.USER_GROUP_ROLE.USER_ID);
        public static final ForeignKey<UserGroupRoleRecord, UserGroupRecord> USER_GROUP_ROLE_IBFK_1 = Internal.createForeignKey(ch.fhnw.labeling_tool.jooq.Keys.KEY_USER_GROUP_PRIMARY, UserGroupRole.USER_GROUP_ROLE, "user_group_role_ibfk_1", UserGroupRole.USER_GROUP_ROLE.USER_GROUP_ID);
    }
}
