/*
 * This file is generated by jOOQ.
 */
package jooq.db.tables.records


import java.lang.Integer
import java.lang.String

import jooq.db.tables.User

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record5
import org.jooq.Row5
import org.jooq.impl.UpdatableRecordImpl


class UserRecord extends UpdatableRecordImpl[UserRecord](User.USER) with Record5[Integer, String, String, String, String] {

  def setId(value : Integer) : Unit = {
    set(0, value)
  }

  def getId : Integer = {
    val r = get(0)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  def setFirstname(value : String) : Unit = {
    set(1, value)
  }

  def getFirstname : String = {
    val r = get(1)
    if (r == null) null else r.asInstanceOf[String]
  }

  def setLastname(value : String) : Unit = {
    set(2, value)
  }

  def getLastname : String = {
    val r = get(2)
    if (r == null) null else r.asInstanceOf[String]
  }

  def setEmail(value : String) : Unit = {
    set(3, value)
  }

  def getEmail : String = {
    val r = get(3)
    if (r == null) null else r.asInstanceOf[String]
  }

  def setPassword(value : String) : Unit = {
    set(4, value)
  }

  def getPassword : String = {
    val r = get(4)
    if (r == null) null else r.asInstanceOf[String]
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------
  override def key : Record1[Integer] = {
    return super.key.asInstanceOf[ Record1[Integer] ]
  }

  // -------------------------------------------------------------------------
  // Record5 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow : Row5[Integer, String, String, String, String] = {
    super.fieldsRow.asInstanceOf[ Row5[Integer, String, String, String, String] ]
  }

  override def valuesRow : Row5[Integer, String, String, String, String] = {
    super.valuesRow.asInstanceOf[ Row5[Integer, String, String, String, String] ]
  }
  override def field1 : Field[Integer] = User.USER.ID
  override def field2 : Field[String] = User.USER.FIRSTNAME
  override def field3 : Field[String] = User.USER.LASTNAME
  override def field4 : Field[String] = User.USER.EMAIL
  override def field5 : Field[String] = User.USER.PASSWORD
  override def component1 : Integer = getId
  override def component2 : String = getFirstname
  override def component3 : String = getLastname
  override def component4 : String = getEmail
  override def component5 : String = getPassword
  override def value1 : Integer = getId
  override def value2 : String = getFirstname
  override def value3 : String = getLastname
  override def value4 : String = getEmail
  override def value5 : String = getPassword

  override def value1(value : Integer) : UserRecord = {
    setId(value)
    this
  }

  override def value2(value : String) : UserRecord = {
    setFirstname(value)
    this
  }

  override def value3(value : String) : UserRecord = {
    setLastname(value)
    this
  }

  override def value4(value : String) : UserRecord = {
    setEmail(value)
    this
  }

  override def value5(value : String) : UserRecord = {
    setPassword(value)
    this
  }

  override def values(value1 : Integer, value2 : String, value3 : String, value4 : String, value5 : String) : UserRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this.value5(value5)
    this
  }

  def this(id : Integer, firstname : String, lastname : String, email : String, password : String) = {
    this()

    set(0, id)
    set(1, firstname)
    set(2, lastname)
    set(3, email)
    set(4, password)
  }
}
