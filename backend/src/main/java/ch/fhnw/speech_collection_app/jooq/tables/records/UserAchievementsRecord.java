/*
 * This file is generated by jOOQ.
 */
package ch.fhnw.speech_collection_app.jooq.tables.records;


import ch.fhnw.speech_collection_app.jooq.tables.UserAchievements;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserAchievementsRecord extends UpdatableRecordImpl<UserAchievementsRecord> implements Record5<Long, Long, Long, Long, Boolean> {

    private static final long serialVersionUID = 2104149318;

    public void setId(Long value) {
        set(0, value);
    }

    public Long getId() {
        return (Long) get(0);
    }

    public void setUserId(Long value) {
        set(1, value);
    }

    public Long getUserId() {
        return (Long) get(1);
    }

    public void setAchievementsId(Long value) {
        set(2, value);
    }

    public Long getAchievementsId() {
        return (Long) get(2);
    }

    public void setPoints(Long value) {
        set(3, value);
    }

    public Long getPoints() {
        return (Long) get(3);
    }

    public void setIsNew(Boolean value) {
        set(4, value);
    }

    public Boolean getIsNew() {
        return (Boolean) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Long, Long, Boolean> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, Long, Long, Boolean> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return UserAchievements.USER_ACHIEVEMENTS.ID;
    }

    @Override
    public Field<Long> field2() {
        return UserAchievements.USER_ACHIEVEMENTS.USER_ID;
    }

    @Override
    public Field<Long> field3() {
        return UserAchievements.USER_ACHIEVEMENTS.ACHIEVEMENTS_ID;
    }

    @Override
    public Field<Long> field4() {
        return UserAchievements.USER_ACHIEVEMENTS.POINTS;
    }

    @Override
    public Field<Boolean> field5() {
        return UserAchievements.USER_ACHIEVEMENTS.IS_NEW;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public Long component3() {
        return getAchievementsId();
    }

    @Override
    public Long component4() {
        return getPoints();
    }

    @Override
    public Boolean component5() {
        return getIsNew();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public Long value3() {
        return getAchievementsId();
    }

    @Override
    public Long value4() {
        return getPoints();
    }

    @Override
    public Boolean value5() {
        return getIsNew();
    }

    @Override
    public UserAchievementsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public UserAchievementsRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public UserAchievementsRecord value3(Long value) {
        setAchievementsId(value);
        return this;
    }

    @Override
    public UserAchievementsRecord value4(Long value) {
        setPoints(value);
        return this;
    }

    @Override
    public UserAchievementsRecord value5(Boolean value) {
        setIsNew(value);
        return this;
    }

    @Override
    public UserAchievementsRecord values(Long value1, Long value2, Long value3, Long value4, Boolean value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public UserAchievementsRecord() {
        super(UserAchievements.USER_ACHIEVEMENTS);
    }

    public UserAchievementsRecord(Long id, Long userId, Long achievementsId, Long points, Boolean isNew) {
        super(UserAchievements.USER_ACHIEVEMENTS);

        set(0, id);
        set(1, userId);
        set(2, achievementsId);
        set(3, points);
        set(4, isNew);
    }
}
