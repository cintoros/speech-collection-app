/*
 * This file is generated by jOOQ.
 */
package ch.fhnw.labeling_tool.jooq.tables.daos;


import ch.fhnw.labeling_tool.jooq.enums.SpeakerSex;
import ch.fhnw.labeling_tool.jooq.tables.Speaker;
import ch.fhnw.labeling_tool.jooq.tables.records.SpeakerRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class SpeakerDao extends DAOImpl<SpeakerRecord, ch.fhnw.labeling_tool.jooq.tables.pojos.Speaker, Long> {

    public SpeakerDao() {
        super(Speaker.SPEAKER, ch.fhnw.labeling_tool.jooq.tables.pojos.Speaker.class);
    }

    @Autowired
    public SpeakerDao(Configuration configuration) {
        super(Speaker.SPEAKER, ch.fhnw.labeling_tool.jooq.tables.pojos.Speaker.class, configuration);
    }

    @Override
    public Long getId(ch.fhnw.labeling_tool.jooq.tables.pojos.Speaker object) {
        return object.getId();
    }

    public List<ch.fhnw.labeling_tool.jooq.tables.pojos.Speaker> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Speaker.SPEAKER.ID, lowerInclusive, upperInclusive);
    }

    public List<ch.fhnw.labeling_tool.jooq.tables.pojos.Speaker> fetchById(Long... values) {
        return fetch(Speaker.SPEAKER.ID, values);
    }

    public ch.fhnw.labeling_tool.jooq.tables.pojos.Speaker fetchOneById(Long value) {
        return fetchOne(Speaker.SPEAKER.ID, value);
    }

    public List<ch.fhnw.labeling_tool.jooq.tables.pojos.Speaker> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Speaker.SPEAKER.NAME, lowerInclusive, upperInclusive);
    }

    public List<ch.fhnw.labeling_tool.jooq.tables.pojos.Speaker> fetchByName(String... values) {
        return fetch(Speaker.SPEAKER.NAME, values);
    }

    public List<ch.fhnw.labeling_tool.jooq.tables.pojos.Speaker> fetchRangeOfLanguage(String lowerInclusive, String upperInclusive) {
        return fetchRange(Speaker.SPEAKER.LANGUAGE, lowerInclusive, upperInclusive);
    }

    public List<ch.fhnw.labeling_tool.jooq.tables.pojos.Speaker> fetchByLanguage(String... values) {
        return fetch(Speaker.SPEAKER.LANGUAGE, values);
    }

    public List<ch.fhnw.labeling_tool.jooq.tables.pojos.Speaker> fetchRangeOfDialect(String lowerInclusive, String upperInclusive) {
        return fetchRange(Speaker.SPEAKER.DIALECT, lowerInclusive, upperInclusive);
    }

    public List<ch.fhnw.labeling_tool.jooq.tables.pojos.Speaker> fetchByDialect(String... values) {
        return fetch(Speaker.SPEAKER.DIALECT, values);
    }

    public List<ch.fhnw.labeling_tool.jooq.tables.pojos.Speaker> fetchRangeOfSex(SpeakerSex lowerInclusive, SpeakerSex upperInclusive) {
        return fetchRange(Speaker.SPEAKER.SEX, lowerInclusive, upperInclusive);
    }

    public List<ch.fhnw.labeling_tool.jooq.tables.pojos.Speaker> fetchBySex(SpeakerSex... values) {
        return fetch(Speaker.SPEAKER.SEX, values);
    }
}
