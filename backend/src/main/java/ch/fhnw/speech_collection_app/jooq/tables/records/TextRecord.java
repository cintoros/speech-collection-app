/*
 * This file is generated by jOOQ.
 */
package ch.fhnw.speech_collection_app.jooq.tables.records;


import ch.fhnw.speech_collection_app.jooq.tables.Text;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TextRecord extends UpdatableRecordImpl<TextRecord> implements Record5<Long, Long, Long, Boolean, String> {

    private static final long serialVersionUID = 1536694744;

    public void setId(Long value) {
        set(0, value);
    }

    public Long getId() {
        return (Long) get(0);
    }

    public void setDialectId(Long value) {
        set(1, value);
    }

    @NotNull
    public Long getDialectId() {
        return (Long) get(1);
    }

    public void setDataElementId(Long value) {
        set(2, value);
    }

    @NotNull
    public Long getDataElementId() {
        return (Long) get(2);
    }

    public void setIsSentenceError(Boolean value) {
        set(3, value);
    }

    public Boolean getIsSentenceError() {
        return (Boolean) get(3);
    }

    public void setText(String value) {
        set(4, value);
    }

    @NotNull
    @Size(max = 65535)
    public String getText() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Long, Boolean, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, Long, Boolean, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Text.TEXT.ID;
    }

    @Override
    public Field<Long> field2() {
        return Text.TEXT.DIALECT_ID;
    }

    @Override
    public Field<Long> field3() {
        return Text.TEXT.DATA_ELEMENT_ID;
    }

    @Override
    public Field<Boolean> field4() {
        return Text.TEXT.IS_SENTENCE_ERROR;
    }

    @Override
    public Field<String> field5() {
        return Text.TEXT.TEXT_;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getDialectId();
    }

    @Override
    public Long component3() {
        return getDataElementId();
    }

    @Override
    public Boolean component4() {
        return getIsSentenceError();
    }

    @Override
    public String component5() {
        return getText();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getDialectId();
    }

    @Override
    public Long value3() {
        return getDataElementId();
    }

    @Override
    public Boolean value4() {
        return getIsSentenceError();
    }

    @Override
    public String value5() {
        return getText();
    }

    @Override
    public TextRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public TextRecord value2(Long value) {
        setDialectId(value);
        return this;
    }

    @Override
    public TextRecord value3(Long value) {
        setDataElementId(value);
        return this;
    }

    @Override
    public TextRecord value4(Boolean value) {
        setIsSentenceError(value);
        return this;
    }

    @Override
    public TextRecord value5(String value) {
        setText(value);
        return this;
    }

    @Override
    public TextRecord values(Long value1, Long value2, Long value3, Boolean value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public TextRecord() {
        super(Text.TEXT);
    }

    public TextRecord(Long id, Long dialectId, Long dataElementId, Boolean isSentenceError, String text) {
        super(Text.TEXT);

        set(0, id);
        set(1, dialectId);
        set(2, dataElementId);
        set(3, isSentenceError);
        set(4, text);
    }
}
