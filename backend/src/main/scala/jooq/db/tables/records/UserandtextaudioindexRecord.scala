/*
 * This file is generated by jOOQ.
 */
package jooq.db.tables.records


import java.lang.Integer
import java.time.LocalDateTime

import jooq.db.tables.Userandtextaudioindex

import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record4
import org.jooq.Row4
import org.jooq.impl.UpdatableRecordImpl


class UserandtextaudioindexRecord extends UpdatableRecordImpl[UserandtextaudioindexRecord](Userandtextaudioindex.USERANDTEXTAUDIOINDEX) with Record4[Integer, Integer, Integer, LocalDateTime] {

  def setId(value : Integer) : Unit = {
    set(0, value)
  }

  def getId : Integer = {
    val r = get(0)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  def setUserid(value : Integer) : Unit = {
    set(1, value)
  }

  def getUserid : Integer = {
    val r = get(1)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  def setTextaudioindexid(value : Integer) : Unit = {
    set(2, value)
  }

  def getTextaudioindexid : Integer = {
    val r = get(2)
    if (r == null) null else r.asInstanceOf[Integer]
  }

  def setTime(value : LocalDateTime) : Unit = {
    set(3, value)
  }

  def getTime : LocalDateTime = {
    val r = get(3)
    if (r == null) null else r.asInstanceOf[LocalDateTime]
  }

  // -------------------------------------------------------------------------
  // Primary key information
  // -------------------------------------------------------------------------
  override def key : Record1[Integer] = {
    return super.key.asInstanceOf[ Record1[Integer] ]
  }

  // -------------------------------------------------------------------------
  // Record4 type implementation
  // -------------------------------------------------------------------------

  override def fieldsRow : Row4[Integer, Integer, Integer, LocalDateTime] = {
    super.fieldsRow.asInstanceOf[ Row4[Integer, Integer, Integer, LocalDateTime] ]
  }

  override def valuesRow : Row4[Integer, Integer, Integer, LocalDateTime] = {
    super.valuesRow.asInstanceOf[ Row4[Integer, Integer, Integer, LocalDateTime] ]
  }
  override def field1 : Field[Integer] = Userandtextaudioindex.USERANDTEXTAUDIOINDEX.ID
  override def field2 : Field[Integer] = Userandtextaudioindex.USERANDTEXTAUDIOINDEX.USERID
  override def field3 : Field[Integer] = Userandtextaudioindex.USERANDTEXTAUDIOINDEX.TEXTAUDIOINDEXID
  override def field4 : Field[LocalDateTime] = Userandtextaudioindex.USERANDTEXTAUDIOINDEX.TIME
  override def component1 : Integer = getId
  override def component2 : Integer = getUserid
  override def component3 : Integer = getTextaudioindexid
  override def component4 : LocalDateTime = getTime
  override def value1 : Integer = getId
  override def value2 : Integer = getUserid
  override def value3 : Integer = getTextaudioindexid
  override def value4 : LocalDateTime = getTime

  override def value1(value : Integer) : UserandtextaudioindexRecord = {
    setId(value)
    this
  }

  override def value2(value : Integer) : UserandtextaudioindexRecord = {
    setUserid(value)
    this
  }

  override def value3(value : Integer) : UserandtextaudioindexRecord = {
    setTextaudioindexid(value)
    this
  }

  override def value4(value : LocalDateTime) : UserandtextaudioindexRecord = {
    setTime(value)
    this
  }

  override def values(value1 : Integer, value2 : Integer, value3 : Integer, value4 : LocalDateTime) : UserandtextaudioindexRecord = {
    this.value1(value1)
    this.value2(value2)
    this.value3(value3)
    this.value4(value4)
    this
  }

  def this(id : Integer, userid : Integer, textaudioindexid : Integer, time : LocalDateTime) = {
    this()

    set(0, id)
    set(1, userid)
    set(2, textaudioindexid)
    set(3, time)
  }
}
