/*
 * This file is generated by jOOQ.
 */
package ch.fhnw.labeling_tool.jooq.tables.records;


import ch.fhnw.labeling_tool.jooq.tables.OriginalText;

import javax.validation.constraints.NotNull;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OriginalTextRecord extends UpdatableRecordImpl<OriginalTextRecord> implements Record3<Long, Long, Long> {

    private static final long serialVersionUID = 1911270256;

    public void setId(Long value) {
        set(0, value);
    }

    public Long getId() {
        return (Long) get(0);
    }

    public void setUserGroupId(Long value) {
        set(1, value);
    }

    @NotNull
    public Long getUserGroupId() {
        return (Long) get(1);
    }

    public void setDomainId(Long value) {
        set(2, value);
    }

    @NotNull
    public Long getDomainId() {
        return (Long) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, Long> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, Long> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return OriginalText.ORIGINAL_TEXT.ID;
    }

    @Override
    public Field<Long> field2() {
        return OriginalText.ORIGINAL_TEXT.USER_GROUP_ID;
    }

    @Override
    public Field<Long> field3() {
        return OriginalText.ORIGINAL_TEXT.DOMAIN_ID;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getUserGroupId();
    }

    @Override
    public Long component3() {
        return getDomainId();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getUserGroupId();
    }

    @Override
    public Long value3() {
        return getDomainId();
    }

    @Override
    public OriginalTextRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public OriginalTextRecord value2(Long value) {
        setUserGroupId(value);
        return this;
    }

    @Override
    public OriginalTextRecord value3(Long value) {
        setDomainId(value);
        return this;
    }

    @Override
    public OriginalTextRecord values(Long value1, Long value2, Long value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public OriginalTextRecord() {
        super(OriginalText.ORIGINAL_TEXT);
    }

    public OriginalTextRecord(Long id, Long userGroupId, Long domainId) {
        super(OriginalText.ORIGINAL_TEXT);

        set(0, id);
        set(1, userGroupId);
        set(2, domainId);
    }
}
