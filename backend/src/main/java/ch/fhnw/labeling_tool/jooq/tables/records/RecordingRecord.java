/*
 * This file is generated by jOOQ.
 */
package ch.fhnw.labeling_tool.jooq.tables.records;


import ch.fhnw.labeling_tool.jooq.tables.Recording;

import java.sql.Timestamp;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RecordingRecord extends UpdatableRecordImpl<RecordingRecord> implements Record5<Long, Long, Long, byte[], Timestamp> {

    private static final long serialVersionUID = 771562126;

    public void setId(Long value) {
        set(0, value);
    }

    public Long getId() {
        return (Long) get(0);
    }

    public void setExcerptId(Long value) {
        set(1, value);
    }

    @NotNull
    public Long getExcerptId() {
        return (Long) get(1);
    }

    public void setUserId(Long value) {
        set(2, value);
    }

    @NotNull
    public Long getUserId() {
        return (Long) get(2);
    }

    public void setAudio(byte... value) {
        set(3, value);
    }

    @Size(max = 16777215)
    public byte[] getAudio() {
        return (byte[]) get(3);
    }

    public void setTime(Timestamp value) {
        set(4, value);
    }

    public Timestamp getTime() {
        return (Timestamp) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Long, Long, Long, byte[], Timestamp> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Long, Long, Long, byte[], Timestamp> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Recording.RECORDING.ID;
    }

    @Override
    public Field<Long> field2() {
        return Recording.RECORDING.EXCERPT_ID;
    }

    @Override
    public Field<Long> field3() {
        return Recording.RECORDING.USER_ID;
    }

    @Override
    public Field<byte[]> field4() {
        return Recording.RECORDING.AUDIO;
    }

    @Override
    public Field<Timestamp> field5() {
        return Recording.RECORDING.TIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getExcerptId();
    }

    @Override
    public Long component3() {
        return getUserId();
    }

    @Override
    public byte[] component4() {
        return getAudio();
    }

    @Override
    public Timestamp component5() {
        return getTime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getExcerptId();
    }

    @Override
    public Long value3() {
        return getUserId();
    }

    @Override
    public byte[] value4() {
        return getAudio();
    }

    @Override
    public Timestamp value5() {
        return getTime();
    }

    @Override
    public RecordingRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public RecordingRecord value2(Long value) {
        setExcerptId(value);
        return this;
    }

    @Override
    public RecordingRecord value3(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public RecordingRecord value4(byte... value) {
        setAudio(value);
        return this;
    }

    @Override
    public RecordingRecord value5(Timestamp value) {
        setTime(value);
        return this;
    }

    @Override
    public RecordingRecord values(Long value1, Long value2, Long value3, byte[] value4, Timestamp value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    public RecordingRecord() {
        super(Recording.RECORDING);
    }

    public RecordingRecord(Long id, Long excerptId, Long userId, byte[] audio, Timestamp time) {
        super(Recording.RECORDING);

        set(0, id);
        set(1, excerptId);
        set(2, userId);
        set(3, audio);
        set(4, time);
    }
}
