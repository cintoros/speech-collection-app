/*
 * This file is generated by jOOQ.
 */
package ch.fhnw.speech_collection_app.jooq.tables.daos;


import ch.fhnw.speech_collection_app.jooq.enums.CheckedRecordingLabel;
import ch.fhnw.speech_collection_app.jooq.tables.CheckedRecording;
import ch.fhnw.speech_collection_app.jooq.tables.records.CheckedRecordingRecord;

import java.sql.Timestamp;
import java.util.List;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class CheckedRecordingDao extends DAOImpl<CheckedRecordingRecord, ch.fhnw.speech_collection_app.jooq.tables.pojos.CheckedRecording, Long> {

    public CheckedRecordingDao() {
        super(CheckedRecording.CHECKED_RECORDING, ch.fhnw.speech_collection_app.jooq.tables.pojos.CheckedRecording.class);
    }

    @Autowired
    public CheckedRecordingDao(Configuration configuration) {
        super(CheckedRecording.CHECKED_RECORDING, ch.fhnw.speech_collection_app.jooq.tables.pojos.CheckedRecording.class, configuration);
    }

    @Override
    public Long getId(ch.fhnw.speech_collection_app.jooq.tables.pojos.CheckedRecording object) {
        return object.getId();
    }

    public List<ch.fhnw.speech_collection_app.jooq.tables.pojos.CheckedRecording> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CheckedRecording.CHECKED_RECORDING.ID, lowerInclusive, upperInclusive);
    }

    public List<ch.fhnw.speech_collection_app.jooq.tables.pojos.CheckedRecording> fetchById(Long... values) {
        return fetch(CheckedRecording.CHECKED_RECORDING.ID, values);
    }

    public ch.fhnw.speech_collection_app.jooq.tables.pojos.CheckedRecording fetchOneById(Long value) {
        return fetchOne(CheckedRecording.CHECKED_RECORDING.ID, value);
    }

    public List<ch.fhnw.speech_collection_app.jooq.tables.pojos.CheckedRecording> fetchRangeOfRecordingId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CheckedRecording.CHECKED_RECORDING.RECORDING_ID, lowerInclusive, upperInclusive);
    }

    public List<ch.fhnw.speech_collection_app.jooq.tables.pojos.CheckedRecording> fetchByRecordingId(Long... values) {
        return fetch(CheckedRecording.CHECKED_RECORDING.RECORDING_ID, values);
    }

    public List<ch.fhnw.speech_collection_app.jooq.tables.pojos.CheckedRecording> fetchRangeOfUserId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(CheckedRecording.CHECKED_RECORDING.USER_ID, lowerInclusive, upperInclusive);
    }

    public List<ch.fhnw.speech_collection_app.jooq.tables.pojos.CheckedRecording> fetchByUserId(Long... values) {
        return fetch(CheckedRecording.CHECKED_RECORDING.USER_ID, values);
    }

    public List<ch.fhnw.speech_collection_app.jooq.tables.pojos.CheckedRecording> fetchRangeOfLabel(CheckedRecordingLabel lowerInclusive, CheckedRecordingLabel upperInclusive) {
        return fetchRange(CheckedRecording.CHECKED_RECORDING.LABEL, lowerInclusive, upperInclusive);
    }

    public List<ch.fhnw.speech_collection_app.jooq.tables.pojos.CheckedRecording> fetchByLabel(CheckedRecordingLabel... values) {
        return fetch(CheckedRecording.CHECKED_RECORDING.LABEL, values);
    }

    public List<ch.fhnw.speech_collection_app.jooq.tables.pojos.CheckedRecording> fetchRangeOfTime(Timestamp lowerInclusive, Timestamp upperInclusive) {
        return fetchRange(CheckedRecording.CHECKED_RECORDING.TIME, lowerInclusive, upperInclusive);
    }

    public List<ch.fhnw.speech_collection_app.jooq.tables.pojos.CheckedRecording> fetchByTime(Timestamp... values) {
        return fetch(CheckedRecording.CHECKED_RECORDING.TIME, values);
    }
}
